                          1.Create inverted triangle using javascript

function invertedTriangle(height) {
  for (let i = height; i > 0; i--) {
    let row = "";
    for (let j = 0; j < i; j++) {
      row += "*";
    }
    console.log(row);
  }
}
invertedTriangle(5);

                               2.Rectangular pattern


function rectangle(width, height) {
  for (let i = 0; i < height; i++) {
    let row = '';
    for (let j = 0; j < width; j++) {
      row += '* ';
    }
    console.log(row);
  }
}
rectangle(5, 5);


                               3.Right Angled Pyramid


function rightAngledPyramid(height) {
  for (let i = 1; i <= height; i++) {
    let row = '';
    
    for (let j = 1; j <= height - i; j++) {
      row += ' ';
    }
    for (let k = 1; k <= i; k++) {
      row += '*';
    }
    
    console.log(row);
  }
}
rightAngledPyramid(5);


                            4.Right Angled Triangle

function rightTriangle(height) {
  for (let i = 1; i <= height; i++) {
    let row = '';
    for (let j = 1; j <= i; j++) {
      row += '*';
    }
    console.log(row);
  }
}
rightTriangle(5);

                               5.Right Inverted Pyramid

function rightInvertedPyramid(rows) {
  for (let i = rows; i >= 1; i--) {
    let pattern = '';
    for (let j = 1; j <= rows - i; j++) {
      pattern += ' ';
    }
    
    for (let k = 1; k <= i; k++) {
      pattern += '*';
    }
    
    console.log(pattern);
  }
}
rightInvertedPyramid(5);


                            6.Second Smallest element and Second Highest element in given array
							
let array= [9,10,23,1,6,4,8,20];
console.log("second Smallest element is :", array.sort()[1]);
console.log("Second Highest element is :",array.sort()[array.length-2]);


                            7.Star Pattern

function StarPyramid(rows) {
  for (var i = 1; i <= rows; i++) {
    var pattern = '';
    for (var j = 1; j <= i; j++) {
      pattern += '* ';
    }
    console.log(pattern);
  }
}
var rows = 5;
StarPyramid(rows);

                          8.Number Triangle Pattern

let n = 5; 
let char = "";
let count = 1;
for (let i = 1; i <= n; i++) {
  for (let j = 1; j <= i; j++) {
    char += count;
    count++;
  }
  char += "\n";		

                        9.Number Pattern 

function numberPattern(rows) {
  for (let i = 1; i <= rows; i++) {
    let row = '';
    for (let j = 1; j <= i; j++) {
      row += (j % 2 === 0) ? '1 ' : '0 ';
    }
    console.log(row);
  }
}

numberPattern(5);	

                      10.Remove duplicates from the given array

function removeDuplicatesFromArray(arr) {
  return Array.from(new Set(arr));
}

const array = [1, 2, 2, 3, 4, 4, 5];
const result = removeDuplicatesFromArray(array);
console.log(result);
				   

